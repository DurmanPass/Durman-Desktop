#name: Release
#
#on:
#  push:
#    tags:
#      - 'v*'
#
#permissions:
#  contents: write
#
#jobs:
#  build-and-release:
#    runs-on: windows-latest
#    steps:
#      - uses: actions/checkout@v4
#      - uses: actions/setup-node@v4
#        with:
#          node-version: '20'
#      - name: Install Rust
#        uses: actions-rs/toolchain@v1
#        with:
#          toolchain: stable
#          target: x86_64-pc-windows-msvc
#      - name: Debug signing key
#        run: |
#          echo "TAURI_SIGNING_PRIVATE_KEY starts with: ${TAURI_SIGNING_PRIVATE_KEY:0:20}"
#        shell: cmd
#      - name: Build Tauri app
#        env:
#          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
#        run: |
#          npm install
#          npm run tauri build -- --target x86_64-pc-windows-msvc
#      - name: Verify artifacts exist
#        run: |
#          dir src-tauri\target\x86_64-pc-windows-msvc\release\bundle
#        shell: cmd
#      - name: Upload artifact
#        uses: actions/upload-artifact@v4
#        with:
#          name: durmanpass_${{ github.ref_name }}_x64_en-US.msi.zip
#          path: src-tauri\target\x86_64-pc-windows-msvc\release\bundle\durmanpass_${{ github.ref_name }}_x64_en-US.msi.zip
#      - name: Upload signature
#        uses: actions/upload-artifact@v4
#        with:
#          name: durmanpass_${{ github.ref_name }}_x64_en-US.msi.zip.sig
#          path: src-tauri\target\x86_64-pc-windows-msvc\release\bundle\durmanpass_${{ github.ref_name }}_x64_en-US.msi.zip.sig
#
#  create-release:
#    runs-on: ubuntu-latest
#    needs: build-and-release
#    steps:
#      - uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#      - name: Set version
#        run: |
#          echo "version=${{ github.ref_name }}" | sed 's/^v//' >> $GITHUB_ENV
#      - name: Download artifacts
#        uses: actions/download-artifact@v4
#        with:
#          path: artifacts
#      - name: Generate latest.json
#        run: |
#          echo '{
#            "version": "${{ env.version }}",
#            "notes": "Release notes for ${{ env.version }}",
#            "pub_date": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
#            "platforms": {
#              "windows-x86_64": {
#                "signature": "$(cat artifacts/durmanpass_${{ env.version }}_x64_en-US.msi.zip.sig/durmanpass_${{ env.version }}_x64_en-US.msi.zip.sig)",
#                "url": "https://github.com/DurmanPass/Durman-Desktop/releases/download/${{ github.ref_name }}/durmanpass_${{ env.version }}_x64_en-US.msi.zip"
#              }
#            }
#          }' > latest.json
#      - name: Commit latest.json to repository
#        run: |
#          git config user.name "github-actions[bot]"
#          git config user.email "github-actions[bot]@users.noreply.github.com"
#          git checkout main
#          git pull origin main
#          git add latest.json
#          git commit -m "Update latest.json for release ${{ env.version }}"
#          git push origin main
#      - name: Create Release
#        uses: softprops/action-gh-release@v1
#        with:
#          files: |
#            artifacts/durmanpass_${{ env.version }}_x64_en-US.msi.zip/durmanpass_${{ env.version }}_x64_en-US.msi.zip
#            latest.json
#          body: "Release notes for ${{ env.version }}"
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set version
        run: |
          echo "version=${{ github.ref_name }}" | sed 's/^v//' >> $GITHUB_ENV
          echo "Set version: ${{ env.version }}"
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-msvc
      - name: Debug signing key
        run: |
          echo "TAURI_SIGNING_PRIVATE_KEY starts with: ${TAURI_SIGNING_PRIVATE_KEY:0:20}"
        shell: cmd
      - name: Build Tauri app
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
        run: |
          npm install
          npm run tauri build -- --target x86_64-pc-windows-msvc
      - name: Verify artifacts exist
        run: |
          dir src-tauri\target\x86_64-pc-windows-msvc\release\bundle
        shell: cmd
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: durmanpass_${{ env.version }}_x64_en-US.msi.zip
          path: src-tauri\target\x86_64-pc-windows-msvc\release\bundle\durmanpass_${{ env.version }}_x64_en-US.msi.zip
      - name: Upload signature
        uses: actions/upload-artifact@v4
        with:
          name: durmanpass_${{ env.version }}_x64_en-US.msi.zip.sig
          path: src-tauri\target\x86_64-pc-windows-msvc\release\bundle\durmanpass_${{ env.version }}_x64_en-US.msi.zip.sig

  create-release:
    runs-on: ubuntu-latest
    needs: build-and-release
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set version
        run: |
          echo "version=${{ github.ref_name }}" | sed 's/^v//' >> $GITHUB_ENV
          echo "Set version: ${{ env.version }}"
      - name: Get release notes
        id: get-release-notes
        run: |
          NOTES=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/DurmanPass/Durman-Desktop/releases/tags/${{ github.ref_name }}" | jq -r '.body // "Release notes for ${{ env.version }}"')
          echo "notes=$NOTES" >> $GITHUB_ENV
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Generate latest.json
        run: |
          echo '{
            "version": "${{ env.version }}",
            "notes": "${{ env.notes }}",
            "pub_date": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'",
            "platforms": {
              "windows-x86_64": {
                "signature": "'$(cat artifacts/durmanpass_${{ env.version }}_x64_en-US.msi.zip.sig/durmanpass_${{ env.version }}_x64_en-US.msi.zip.sig)'",
                "url": "https://github.com/DurmanPass/Durman-Desktop/releases/download/${{ github.ref_name }}/durmanpass_${{ env.version }}_x64_en-US.msi.zip"
              }
            }
          }' > latest.json
      - name: Commit latest.json to repository
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout main
          git pull origin main
          git add latest.json
          git commit -m "Update latest.json for release ${{ env.version }}"
          git push origin main
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/durmanpass_${{ env.version }}_x64_en-US.msi.zip/durmanpass_${{ env.version }}_x64_en-US.msi.zip
            latest.json
          body: "Release notes for ${{ env.version }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}